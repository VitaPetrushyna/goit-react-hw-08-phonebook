{"version":3,"file":"static/js/192.2dfc7bb0.chunk.js","mappings":"kOAEaA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EAEjBC,EAAe,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAIpBC,EAAqB,SAAAP,GAChC,IAAMC,EAAWF,EAAYC,GAGvBQ,EAFSL,EAAUH,GAEOS,cAEhC,OAAOR,EAASG,QAAO,qBAAGM,KACnBD,cAAcE,SAASH,EADP,GAGxB,E,6BCjBYI,EAAeC,EAAAA,GAAAA,GAAH,kMASZC,EAAeD,EAAAA,GAAAA,GAAH,yCAIZE,EAAYF,EAAAA,GAAAA,OAAH,wQ,SCTf,SAASG,IACd,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYX,GAC9BY,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAACR,EAAD,UACGK,EAAgBI,KAAI,gBAAGX,EAAH,EAAGA,KAAMY,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACnB,UAACT,EAAD,WACGJ,EAAO,MAAQY,GAEd,SAACP,EAAD,CACES,KAAK,SACLd,KAAK,SACLe,QAAS,kBAdO,SAAAC,GAC1B,IAAMC,GAASC,EAAAA,EAAAA,IAAcF,GAC7BP,EAASQ,EACV,CAW0BE,CAAoBN,EAA1B,EAHX,sBAHeA,EADA,KAgB1B,C,gCC/BYO,EAAYjB,EAAAA,GAAAA,MAAH,sLAWTkB,EAAYlB,EAAAA,GAAAA,MAAH,kFCPTmB,EAAS,WACpB,IAAM5B,GAASc,EAAAA,EAAAA,IAAYf,GAErBgB,GAAWC,EAAAA,EAAAA,MAQjB,OACE,UAACU,EAAD,oCAEE,SAACC,EAAD,CACEP,KAAK,OACLS,MAAO7B,EACPM,KAAK,SACLwB,SAboB,SAAAC,GACxB,IAAQF,EAAUE,EAAMC,OAAhBH,MACFN,GAASU,EAAAA,EAAAA,GAAUJ,GACzBd,EAASQ,EACV,MAaF,E,mBC1BYW,EAAOzB,EAAAA,GAAAA,KAAH,iQAWJ0B,EAAY1B,EAAAA,GAAAA,MAAH,qFAMT2B,EAAY3B,EAAAA,GAAAA,MAAH,gFAMT4B,EAAS5B,EAAAA,GAAAA,OAAH,yRChBZ,SAAS6B,IACd,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOjC,EAAP,KAAakC,EAAb,KACA,GAA2BD,EAAAA,EAAAA,UAAS,IAApC,eAAOrB,EAAP,KAAeuB,EAAf,KAEM1B,GAAWC,EAAAA,EAAAA,MAEXnB,GAAWiB,EAAAA,EAAAA,IAAYnB,IAE7B+C,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,IAEJ,IAAM6B,EAAe,SAAAb,GACnB,MAAwBA,EAAMc,cAAtBvC,EAAR,EAAQA,KAAMuB,EAAd,EAAcA,MAEd,OAAQvB,GACN,IAAK,OACHkC,EAAQX,GACR,MAEF,IAAK,SACHY,EAASZ,GACT,MAEF,QACE,OAEL,EAiCKiB,EAAQ,WACZN,EAAQ,IACRC,EAAS,GACV,EAED,OACE,UAACP,EAAD,CAAMa,SArCa,SAAAhB,GACnBA,EAAMiB,iBAEN,IACE,IAAMC,EAAa,CACjB3C,KAAAA,EACAY,OAAAA,GAGF,GACErB,EAASqD,MACP,SAAAC,GAAO,OACLA,EAAQ7C,KAAKD,gBAAkB4C,EAAW3C,KAAKD,aAD1C,IAIT,OAAO+C,EAAAA,GAAAA,KAAA,UACFH,EAAW3C,KADT,8DAKTS,GAASsC,EAAAA,EAAAA,IAAW,CAAE/C,KAAAA,EAAMY,OAAAA,KAE5BkC,EAAAA,GAAAA,QAAc,iBACdN,GAGD,CAFC,MAAOQ,GACPF,EAAAA,GAAAA,MAAA,UAAeE,EAAMC,SACtB,CAEDT,GACD,EAQC,WACE,UAACX,EAAD,mBAEE,SAACC,EAAD,CACEhB,KAAK,OACLd,KAAK,OACLkD,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACR7B,MAAOvB,EACPwB,SAAUc,QAGd,UAACT,EAAD,qBAEE,SAACC,EAAD,CACEhB,KAAK,MACLd,KAAK,SACLkD,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACR7B,MAAOX,EACPY,SAAUc,QAGd,SAACP,EAAD,CAAQjB,KAAK,SAAb,2BAGL,CCrGM,IAAMuC,EAAoBlD,EAAAA,GAAAA,IAAH,oLASjBmD,EAAenD,EAAAA,GAAAA,GAAH,yGAOZoD,EAAepD,EAAAA,GAAAA,GAAH,yGCJV,SAASqD,IACtB,IAAM/C,GAAWC,EAAAA,EAAAA,MACXd,GAAYY,EAAAA,EAAAA,IAAYb,GAM9B,OAJAyC,EAAAA,EAAAA,YAAU,WACR3B,GAAS4B,EAAAA,EAAAA,MACV,GAAE,CAAC5B,KAGF,UAAC4C,EAAD,YACE,SAACI,EAAA,EAAD,WACE,gDAEF,SAACH,EAAD,yBACA,SAACtB,EAAD,KAEA,yBAAMpC,GAAa,4BAEnB,SAAC0B,EAAD,KACA,SAACiC,EAAD,wBACA,SAACjD,EAAD,MAGL,C","sources":["redux/contacts/selectors.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\n// export const getVisibleContacts = createSelector(\n//   [getContacts, getFilter],\n//   (contacts, filter) => {\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(({ name }) =>\n//       name.toLowerCase().includes(normalizedFilter)\n//     );\n//   }\n// );\n","import styled from 'styled-components';\n\nexport const ListContacts = styled.ul`\n  width: 400px;\n\n  margin: 0 auto;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  border-radius: 5px;\n`;\n\nexport const ContactsItem = styled.li`\n  margin: 10px;\n`;\n\nexport const DeleteBtn = styled.button`\n  margin-left: 10px;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  border-radius: 5px;\n  background-color: #719ae2;\n  cursor: pointer;\n  color: #0d0d0d;\n  border: gray;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { ListContacts, ContactsItem, DeleteBtn } from './ContactList.styled';\n\nexport function ContactList() {\n  const visibleContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = deleteId => {\n    const action = deleteContact(deleteId);\n    dispatch(action);\n  };\n\n  return (\n    <ListContacts>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsItem key={id}>\n          {name + ' : ' + number}\n          {\n            <DeleteBtn\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => handleDeleteContact(id)}\n            >\n              Delete\n            </DeleteBtn>\n          }\n        </ContactsItem>\n      ))}\n    </ListContacts>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FindLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 5px auto;\n  width: 300px;\n  padding: 8px;\n  font-weight: 500;\n  font-size: 42;\n  color: #5389e6;\n`;\n\nexport const FindInput = styled.input`\n  padding: 5px;\n  margin: 5px 0;\n  border-radius: 5px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nimport { FindLabel, FindInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const handleFilterInput = event => {\n    const { value } = event.target;\n    const action = setFilter(value);\n    dispatch(action);\n  };\n\n  return (\n    <FindLabel>\n      Find contacts by name\n      <FindInput\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleFilterInput}\n      ></FindInput>\n    </FindLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  margin: 10px auto;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  border-radius: 5px;\n`;\n\nexport const LabelData = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 5px;\n`;\n\nexport const InputData = styled.input`\n  margin: 5px;\n  padding: 5px;\n  border-radius: 5px;\n`;\n\nexport const AddBtn = styled.button`\n  width: 200px;\n  height: 30px;\n  margin: 10px auto;\n  box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n    1px 4px 6px rgb(0 0 0 / 16%);\n  border-radius: 5px;\n  background-color: #719ae2;\n  cursor: pointer;\n  color: #0d0d0d;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact, fetchContacts } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { getContacts } from 'redux/contacts/selectors';\n\nimport { useState, useEffect } from 'react';\n\nimport { Form, AddBtn, InputData, LabelData } from './ContactForm.styled';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    try {\n      const newContact = {\n        name,\n        number,\n      };\n\n      if (\n        contacts.some(\n          contact =>\n            contact.name.toLowerCase() === newContact.name.toLowerCase()\n        )\n      ) {\n        return toast.info(\n          `${newContact.name} is already in contacts.\n      Please choose other name.`\n        );\n      }\n      dispatch(addContact({ name, number }));\n\n      toast.success('Contact added');\n      reset();\n    } catch (error) {\n      toast.error(`${error.message}`);\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <LabelData>\n        Name\n        <InputData\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </LabelData>\n      <LabelData>\n        Number\n        <InputData\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </LabelData>\n      <AddBtn type=\"submit\">Add contact</AddBtn>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  min-height: 590px;\n  /* height: calc(100vh - 50px); */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ContactTitle = styled.h2`\n  font-weight: 500;\n  font-size: 48;\n  text-align: center;\n  color: #5389e6;\n`;\n\nexport const ContactsList = styled.h3`\n  font-weight: 500;\n  font-size: 42;\n  text-align: center;\n  color: #5389e6;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/selectors';\nimport {\n  ContactTitle,\n  ContactsList,\n  ContactsContainer,\n} from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsContainer>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactTitle>Phonebook</ContactTitle>\n      <ContactForm />\n\n      <div>{isLoading && 'Request in progress...'}</div>\n\n      <Filter />\n      <ContactsList>Contacts</ContactsList>\n      <ContactList />\n    </ContactsContainer>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","ListContacts","styled","ContactsItem","DeleteBtn","ContactList","visibleContacts","useSelector","dispatch","useDispatch","map","number","id","type","onClick","deleteId","action","deleteContact","handleDeleteContact","FindLabel","FindInput","Filter","value","onChange","event","target","setFilter","Form","LabelData","InputData","AddBtn","ContactForm","useState","setName","setPhone","useEffect","fetchContacts","handleChange","currentTarget","reset","onSubmit","preventDefault","newContact","some","contact","toast","addContact","error","message","pattern","title","required","ContactsContainer","ContactTitle","ContactsList","Contacts","Helmet"],"sourceRoot":""}